<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>plugin</artifactId>
        <!-- See https://github.com/jenkinsci/plugin-pom/releases for latest version -->
        <version>4.46</version>
        <relativePath />
    </parent>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <organization>
        <name>medavis GmbH</name>
        <url>https://www.medavis.com/</url>
    </organization>

    <scm>
        <connection>scm:git:https://github.com/medavis-gmbh/LicenseComplianceTool.git</connection>
        <url>https://github.com/medavis-gmbh/LicenseComplianceTool</url>
    </scm>

    <groupId>de.medavis</groupId>
    <artifactId>license-compliance-tool</artifactId>
    <name>License Compliance Tool</name>
    <description>Generate component manifest and license files for compliance with licenses of third-party software</description>
    <url>https://github.com/medavis-gmbh/LicenseComplianceTool</url>
    <version>1.0-SNAPSHOT</version>
    <packaging>hpi</packaging>

    <properties>
        <!-- Jenkins versions -->
        <jenkins.version>2.346.2</jenkins.version>

        <!-- Other dependency versions -->
        <cyclonedx.version>7.1.5</cyclonedx.version>
        <openpdf.version>1.3.28</openpdf.version>
        <assertj.version>3.23.1</assertj.version>
        <wiremock.version>2.33.2</wiremock.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- See https://github.com/jenkinsci/bom/releases for latest version -->
            <dependency>
                <groupId>io.jenkins.tools.bom</groupId>
                <artifactId>bom-2.346.x</artifactId>
                <version>1580.v47b_429a_c853a</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Required Jenkins plugins -->
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>structs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jenkinsci.plugins</groupId>
            <artifactId>pipeline-model-definition</artifactId>
        </dependency>
        <dependency>
            <groupId>io.jenkins.plugins</groupId>
            <artifactId>commons-lang3-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>apache-httpcomponents-client-4-api</artifactId>
        </dependency>

        <!-- Required for BOM parsing -->
        <dependency>
            <groupId>org.cyclonedx</groupId>
            <artifactId>cyclonedx-core-java</artifactId>
            <version>${cyclonedx.version}</version>
            <exclusions>
                <!-- These dependencies are already delivered by Jenkins or other plugins -->
                <exclusion>
                    <groupId>commons-codec</groupId>
                    <artifactId>commons-codec</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-io</artifactId>
                    <groupId>commons-io</groupId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-lang3</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.dataformat</groupId>
                    <artifactId>jackson-dataformat-xml</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Required for PDF creation -->
        <dependency>
            <groupId>com.github.librepdf</groupId>
            <artifactId>openpdf</artifactId>
            <version>${openpdf.version}</version>
            <exclusions>
                <!-- These dependencies are already delivered by Jenkins or other plugins -->
                <exclusion>
                    <artifactId>jsr305</artifactId>
                    <groupId>com.google.code.findbugs</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Jenkins test tooling -->
        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-cps</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-job</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-basic-steps</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-durable-task-step</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Other test dependencies -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-jre8</artifactId>
            <version>${wiremock.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <repositories>
        <repository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>2.0.0</version>
                <configuration>
                    <inceptionYear>2022</inceptionYear>
                    <licenseName>apache_v2</licenseName>
                </configuration>
                <executions>
                    <execution>
                        <id>update-file-header</id>
                        <goals>
                            <goal>update-file-header</goal>
                        </goals>
                        <phase>process-sources</phase>
                        <configuration>
                            <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
                            <roots>
                                <root>src/main</root>
                                <root>src/test</root>
                            </roots>
                            <excludes>
                                <exclude>**/*.json</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>